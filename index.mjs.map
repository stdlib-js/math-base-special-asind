{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport rad2deg from '@stdlib/math-base-special-rad2deg';\nimport asin from '@stdlib/math-base-special-asin';\n\n\n// MAIN //\n\n/**\n* Computes the arcsine (in degrees) of a double-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {number} arcsine (in degrees)\n*\n* @example\n* var v = asind( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = asind( 0.5  );\n* // returns ~30.0\n*\n* @example\n* import sqrt from '@stdlib/math-base-special-sqrt';\n*\n* var v = asind( sqrt( 2.0 ) / 2.0 );\n* // returns ~45.0\n*\n* @example\n* import sqrt from '@stdlib/math-base-special-sqrt';\n*\n* var v = asind( sqrt( 3.0 ) / 2.0 );\n* // returns ~60.0\n*\n* @example\n* var v = asind( NaN );\n* // returns NaN\n*/\nfunction asind( x ) {\n\treturn rad2deg( asin( x ) );\n}\n\n\n// EXPORTS //\n\nexport default asind;\n"],"names":["asind","x","rad2deg","asin"],"mappings":";;qMA0DA,SAASA,EAAOC,GACf,OAAOC,EAASC,EAAMF,GACvB"}